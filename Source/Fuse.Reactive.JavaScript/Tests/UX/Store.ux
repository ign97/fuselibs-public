<Panel ux:Class="UX.Store">
	<JavaScript>
		var Store = require("FuseJS/Store");

		var store = new Store({
			foo: { moo: [ { bar: 'orange'}, {bar: 'apple'}, {bar:'banana'} ] },
			bar: 3,

			change1: function() {
				this.add("foo", "moo", {bar: 'grape'})
			},

			change2: function() {
				this.insertAt("foo", "moo", 1, {bar: 'lemon'})
			},

			change3: function() {
				this.removeAt("foo", "moo", 2)
				this.removeAt("foo", "moo", 2)
			},

			change4: function() {
				this.set("foo", "moo", 1, "bar", "fish")
			},

			change5: function() {
				this.set("bar", 1)
			},

			change6: function () {
				if (store_times !== 2) { throw new Error(); }
				this.set({ foo: { moo: [ { bar: 'batman'}, {bar: 'batman'}, {bar:'batman'} ] }, bar: 8})
			},

			change7: function() {
				if (store_times !== 3) { throw new Error(); }
			},

			init: function() {
				this.add("foo", "moo", {bar: 'grape'}) 
				this.insertAt("foo", "moo", 1, {bar: 'lemon'})
				this.removeAt("foo", "moo", 2)
				this.set("foo", "moo", 3, "bar", "coconut")
			}
		});

		store.init()

		module.exports = store;
		
	</JavaScript>
	<StackPanel ux:Name="p">
		<Each Items="{foo.moo}">
			<Text>{bar}</Text>
		</Each>
	</StackPanel>
	<Panel>
		<JavaScript dep:x="{foo}">
			if (typeof store_times === "undefined") { store_times = 1; }
			store_times++;
			if (store_times === 2)
			{
				if (JSON.stringify(x) !== '{"moo":[{"bar":"orange"},{"bar":"lemon"},{"bar":"banana"},{"bar":"coconut"}]}')
					{ throw new Error(JSON.stringify(x)); }
			}
			else if (store_times === 3)
			{
				if (JSON.stringify(x) !== '{"moo":[{"bar":"batman"},{"bar":"batman"},{"bar":"batman"}]}')
					{ throw new Error(); }
			}
			else
			{
				throw new Error();
			}
		</JavaScript>
	</Panel>
	<Text ux:Name="bar">{bar}</Text>
	<Text ux:Name="s">{foo.moo[1].bar}</Text>
	<FuseTest.Invoke Handler="{change1}" ux:Name="change1"/>
	<FuseTest.Invoke Handler="{change2}" ux:Name="change2"/>
	<FuseTest.Invoke Handler="{change3}" ux:Name="change3"/>
	<FuseTest.Invoke Handler="{change4}" ux:Name="change4"/>
	<FuseTest.Invoke Handler="{change5}" ux:Name="change5"/>
	<FuseTest.Invoke Handler="{change6}" ux:Name="change6"/>
	<FuseTest.Invoke Handler="{change7}" ux:Name="change7"/>
</Panel>